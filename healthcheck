#!/bin/bash

. /opt/debug.sh
. /opt/logger.sh


isAvailable=0
declare -i index=0
# as default ADB_POLLING_SEC is 5s then we wait for authorizing ~50 sec only
while [[ $index -lt 10 ]]; do
  # Possible adb statuses - https://android.googlesource.com/platform/packages/modules/adb/+/refs/heads/main/adb.cpp#118
  # Possible adb statuses2 - https://android.googlesource.com/platform/packages/modules/adb/+/refs/heads/main/proto/devices.proto#25
  # UsbNoPermissionsShortHelpText https://android.googlesource.com/platform/system/core/+/refs/heads/main/diagnose_usb/diagnose_usb.cpp#83
  state=$(adb get-state 2>&1)
  logger --------------
  logger state: "$state"

  case $state in
  "device")
    logger "Device connected successfully."
    isAvailable=1
    break
    ;;
  *"authorizing"* | *"connecting"* | *"unknown"* | *"bootloader"*)
    # do not break to repeat verification until device in temporary state
    logger "Waiting for valid device state..."
    ;;
  *"unauthorized"*)
    logger "WARN" "Authorize device manually!"
    exit 1
    ;;
  *"offline"*)
    logger "WARN" "Device is offline, performing adb reconnect."
    adb reconnect
    ;;
  *"no devices/emulators found"*)
    if [[ -n "$ANDROID_DEVICE" ]]; then
      logger "WARN" "Remote device is not found, performing adb reconnect."
      adb reconnect
    else
      logger "WARN" "Device not found, performing usb port reset."
      usbreset "${DEVICE_BUS}" || exit 0
    fi
    ;;
  *)
    # it should cover such state as: host, recovery, rescue, sideload, no permissions
    logger "ERROR" "Troubleshoot device manually to define the best strategy."
    exit 1
    ;;
  esac

  logger "One more attempt in ${ADB_POLLING_SEC} seconds..."
  sleep "${ADB_POLLING_SEC}"
  index+=1
done

if [[ $isAvailable -eq 0 ]]; then
  # device is in the state we can't fix so exit without restart
  exit 1
fi